generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Session {
  id            String    @id
  shop          String
  state         String
  isOnline      Boolean   @default(false)
  scope         String?
  expires       DateTime?
  accessToken   String
  userId        BigInt?
  firstName     String?
  lastName      String?
  email         String?
  accountOwner  Boolean   @default(false)
  locale        String?
  collaborator  Boolean?  @default(false)
  emailVerified Boolean?  @default(false)
}

model BulkTagJob {
  id             String       @id @default(cuid())
  shop           String
  status         JobStatus    @default(PENDING)
  operation      TagOperation
  totalCount     Int
  processedCount Int          @default(0)
  successCount   Int          @default(0)
  failedCount    Int          @default(0)
  tagValue       String
  oldTagValue    String?
  productIds     String[]
  errorLog       String?
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
  completedAt    DateTime?

  @@index([shop, status])
  @@index([createdAt])
}

model UserPreferences {
  id                 String   @id @default(cuid())
  shop               String   @unique
  defaultBatchSize   Int      @default(10)
  emailNotifications Boolean  @default(true)
  savedFilters       Json?
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt
}

model TagUsage {
  id         String   @id @default(cuid())
  shop       String
  tagName    String
  usageCount Int      @default(1)
  lastUsed   DateTime @default(now())

  @@unique([shop, tagName])
  @@index([shop, usageCount])
}

enum JobStatus {
  PENDING
  IN_PROGRESS
  COMPLETED
  FAILED
  CANCELLED
}

enum TagOperation {
  ADD_TAG
  REMOVE_TAG
  REPLACE_TAG
}
